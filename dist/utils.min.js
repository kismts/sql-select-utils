const _slice=(n,e,a)=>n.slice(e,a),len=n=>n.length,keys=Object.keys,nul=n=>0===len(n),map=n=>e=>e.map(n),all=n=>e=>e.every(n),append=(n,e)=>n.concat(e),minFn=(n,e)=>e<n?e:n,take=(n,e)=>_slice(e,0,n<0?0:n),_gt=n=>(e,a)=>n(e)>n(a),best=(n,e)=>{const a=len(n);let t=-1,l=n[++t];for(;++t<a;)l=e(n[t],l)?n[t]:l;return l},maxLen=n=>len(n)?len(best(n,_gt(len))):NaN,transpose=n=>len(n)?n[0].map((e,a)=>n.map(n=>n[a])):[],isNum_Null=n=>"number"==typeof n||null==n,repeat=(n,e)=>n.repeat(e),unlines=n=>n.join("\n"),unchars=n=>n.join("");export const drawTable=(n,e)=>{const a=len(n),t=a?keys(n[0]):[""],l=nul(t)?[""]:t,p=nul(t)?n=>[""]:n=>map(e=>n[e])(l),s=map(p)(n),r=map(n=>all(isNum_Null)(n))(transpose(s)),m=map(map(String))(s),c=append([l],m),o=map((n,a)=>minFn(maxLen(n),e&&null!=e[a+1]?e[a+1]:1/0))(transpose(c)),u=len(l)-1,i=unchars(map((n,e)=>"+-"+repeat("-",o[e])+(e<u?"-":"-+"))(l))+"\n",d=(n,e)=>{n=take(o[e],n);const a=repeat(" ",o[e]-len(n));return"| "+(r[e]?a+n:n+a)+(e<u?" ":" |")},h=i+unchars(map(d)(l))+"\n"+i;return"\n\n"+h+(a?unlines(map(n=>unchars(map(d)(n)))(m))+"\n":"")+(a>=50?h:i)+`${a} row${a>1?"s":""} selected`+"\n\n"};export const htmlTable=(n,e)=>{const a=e&&e.caption,t=e&&e.class,l=len(n),p=l?keys(n[0]):[],s=t?map(n=>` class="item-${n.split(/\s+/).join("-")}"`)(p):null,r=map(n=>map(e=>n[e])(p))(n),m=map(map(String))(r),c=append([p],m),o=(n,e)=>`<th scope="col"${t?s[e]:""}>`+n+"</th>",u=(n,e)=>`<td${t?s[e]:""}>`+n+"</td>";return"<table>\n"+(a?"<caption>"+a+"</caption>\n":"")+unlines(map((n,e)=>(n=>0===n?"<thead>":1===n?"<tbody>":"")(e)+"<tr>"+unchars(map(e?u:o)(n))+"</tr>"+(n=>0===n?"</thead>":n===l?"</tbody>":"")(e))(c))+"\n</table>"};